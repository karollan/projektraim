@page "/card"
@inject HttpClient Http
@using Shared.Models
@using ViewModels
@using FormModels
@inject IJSRuntime js

<p>Your current score is @currentScore</p>

@if (quiz == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row d-flex justify-content-center align-items-center">
        <div class="col-md-8">

            @{int quizIndex = 0;
            }
            @foreach (var quizItem in quiz)
            {
            <div class="list-group justify-content-center align-items-center text-center">
                <h6 class="h6 dark-grey-text mb-3 mt-3">@quizItem.Question</h6>

            </div>
                <div class="border py-3 rounded-bottom justify-content-center align-items-center row d-flex list-group">

                    @{ int choiceIndex = 0;
                        quizScores.Add(0); }
                    @foreach (var choice in quizItem.Choices)
                    {
                    <div class="col-sm-10">
                        <div class="form-check">

                            @{int currentQuizIndex = quizIndex;}
                            <input class="form-check-input" type="radio" id="@choiceIndex" value="@choiceIndex" @onchange="@((eventArgs) => UpdateScore(Convert.ToInt32(eventArgs.Value), currentQuizIndex))" />
                            <label class="form-check-label" for="@choiceIndex">
                                @choice
                            </label>
                        </div>
                        @if (quizItem.Choices.Count-1 > quizItem.Choices.IndexOf(choice))
                        {
                            <br />
                        }

                        @{choiceIndex++;
                        }
                    </div>

                    }
                </div>
                <br />
                <br />
                quizIndex++;
            }
        </div>
    </div>

}




@code {
    //QUIZ
    List<QuizItem> quiz;
    List<int> quizScores = new List<int>();
    int currentScore = 0;

    protected override async Task OnInitializedAsync()
    {
        quiz = await Http.GetJsonAsync<List<QuizItem>>("http://localhost:7071/api/GetQuiz");
    }

    void UpdateScore(int chosenAnswerIndex, int quizIndex)
    {
        var quizItem = quiz[quizIndex];

        if (chosenAnswerIndex == quizItem.AnswerIndex)
        {
            quizScores[quizIndex] = quizItem.Score;
        }
        else
        {
            quizScores[quizIndex] = 0;
        }
        currentScore = quizScores.Sum();
    }
    //QUIZ

}
