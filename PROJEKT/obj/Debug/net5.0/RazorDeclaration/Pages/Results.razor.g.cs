// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PROJEKT.Pages
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using PROJEKT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using PROJEKT.Share;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Blazorise.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using Blazorise.Icons.FontAwesome;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\_Imports.razor"
using C5;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\Pages\Results.razor"
using Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\Pages\Results.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/results/{currentScore}")]
    public partial class Results : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 41 "C:\Users\Moriator\source\repos\projektraim-main\PROJEKT\Pages\Results.razor"
                   
                [Parameter]
                public string CurrentScore { get; set; }
                public int score;
                string message = "";
                BarChart<int> barChart;

                List<Data> Scores = new List<Data>();

                int maxScore = 16;

                protected override void OnInitialized()
                {
                    score = int.Parse(CurrentScore);
                }

                protected override async Task OnAfterRenderAsync(bool firstRender)
                {
                    if (firstRender)
                    {
                        await showResults();
                    }
                }

                async Task showResults()
                {
                    try
                    {
                        message = "Pobieram wyniki z bazy danych";
                        Scores = await Http.GetFromJsonAsync<List<Data>>("http://localhost:7071/api/GetTestScores");
                        message = "Scores displayed";
                    }
                    catch (Exception ex)
                    {
                        message = "Failed to store your feedback";
                    }

                    await barChart.Clear();
                    await barChart.AddLabelsDatasetsAndUpdate(generateLabels(maxScore), GetBarChartDataset());
                }

                BarChartDataset<int> GetBarChartDataset()
                {
                    return new BarChartDataset<int>
                    {
                        Label = "Wyniki",
                        Data = getDistribution(Scores, maxScore),
                        BackgroundColor = generateColors(maxScore, 0.6f),
                        BorderColor = generateColors(maxScore, 1f),
                        BorderWidth = 1,

                    };
                }

                object barChartOptions = new
                {
                    Title = new
                    {
                        Display = true,
                        Text = "Wyniki testu"
                    },

                    Scales = new
                    {
                        YAxes = new object[]
                        {
                new
                {
                    ScaleLabel = new
                    {
                        Display = true, LabelString = "Liczba ankietowanych"
                    }
                }
                                    },
                        XAxes = new object[]
                        {
                new
                {
                    ScaleLabel = new
                    {
                        Display = true, LabelString = "Ilość punktów"
                    }
                }
                                    }
                    }
                };

                private List<int> getDistribution(List<Data> data, int range)
                {
                    List<int> result = new List<int>();

                    var hash = new HashBag<int>();
                    hash.AddAll(data.Select(c => c.Y).ToList());
                    var mults = hash.ItemMultiplicities();


                    for (int i = 0; i <= range; i++)
                    {
                        result.Add(0);
                    }

                    foreach (C5.KeyValuePair<int, int> kvp in mults)
                    {
                        result[kvp.Key] = kvp.Value;
                    }

                    return result;
                }

                private string[] generateLabels(int colNumber)
                {
                    string[] Labels = new string[colNumber + 1];

                    for (int i = 0; i <= colNumber; i++)
                    {
                        Labels[i] = i.ToString();
                    }
                    return Labels;
                }

                private List<string> generateColors(int colNumber, float a)
                {
                    List<string> result = new List<string>();

                    for (int i = 0; i <= colNumber; i++)
                    {

                        result.Add(ChartColor.FromRgba(255, 111, 145, a));
                    }

                    return result;
                }
            

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
